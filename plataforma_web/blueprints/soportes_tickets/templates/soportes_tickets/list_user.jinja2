{% extends 'layouts/app.jinja2' %}
{% import 'macros/list.jinja2' as list %}
{% import 'macros/topbar.jinja2' as topbar %}
{% import 'macros/accordion.jinja2' as accordion %}

{% block title %}Tickets{% endblock %}

{% block custom_head %}
    <!-- traer css para diseño del botón help-->
    <link href="{{ url_for('static', filename='css/quill.css') }}" rel="stylesheet" type="text/css"/>
    <style>
        tr {
            border-color: white;
        }
        #soportes_tickets_datatable td:nth-child(4), th:nth-child(4) {
            text-align: center;
        }
        #soportes_tickets_datatable tbody tr:hover {
            background-color: #ffa;
            cursor: pointer;
        }
    </style>
{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Tickets') %}
        {% if current_user.can_insert('SOPORTES TICKETS') %}
            {{ topbar.button_new('Nuevo Ticket', url_for('soportes_tickets.new')) }}
        {% endif %}
        {# {{ topbar.button(url_for('soporte_tickets.ayuda'),'mdi:help_questionmarket')}} #}
    {% endcall %}
{% endblock %}

{% block content %}
    {% call list.card('Tickets') %}
        <table id="soportes_tickets_datatable" class="table display nowrap" style="width:100%;">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Descripción</th>
                    <th>Categoría</th>
                    <th>Estado</th>
                    <th>Respuesta/Solución</th>
                </tr>
            </thead>
        </table>
        <a class="btn btn-primary btn-flotante"  data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample">
            <i class="iconify" data-icon="mdi:help"></i>
        </a>
        <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
            <div id="json">
                {# <div class="offcanvas offcanvas-end offcanvas-bg overflow-auto" tabindex="-1" id="sidebar" aria-labelledby="sidebar-label" data-overlay="false">#}
                    {{ accordion.header(titulo) }}
                    {# <p class="p-descript">{{ descripcion }} </p>
                    <div class="offcanvas-body p-descript">
                        <div style="background-color:#ebebeb" >
                            <div class="overflow-auto " data-spy="scroll" data-target="#navbar-example2" data-offset="0">
                                <div class="accordion " id="accordionP">
                                {% for seccion in secciones %}
                                    {% set show = "" %}
                                    {% if seccion["id"] == seccion_id %}
                                        {% set show = "show" %}
                                    {% endif %}
                                    {{  accordion.help_items(seccion["id"], seccion["subtitulo"], ("<p>" + seccion["descripcion"]|join('</p>\n<p>')  + "</p>"), show) }}
                                {% endfor %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div> #}
           {# </div>
             <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="offcanvasExampleLabel">Ayuda</h5>
                <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <div>
                Aquí colocaremos el json para mostrar la ayuda correspondiente
                </div>
                <div class="dropdown mt-3">
                    <div class="accordion accordion-flush" id="accordionFlushExample">
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="flush-headingOne">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                                    Ayuda 1
                                </button>
                            </h2>
                            <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
                                <div class="accordion-body">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="flush-headingTwo">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
                                    Ayuda 2
                                </button>
                            </h2>
                            <div id="flush-collapseTwo" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
                                <div class="accordion-body">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="flush-headingThree">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
                                    Ayuda 3
                                </button>
                            </h2>
                            <div id="flush-collapseThree" class="accordion-collapse collapse" aria-labelledby="flush-headingThree" data-bs-parent="#accordionFlushExample">
                                <div class="accordion-body">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>#}
        </div> 
    {% endcall %}
{% endblock %}



{% block custom_javascript %}
    <script>
        $(document).ready(function(){
            $.ajax({
                url:"static/json/help/tickets.json",
                type: "POST",
                cache: false,
                success: function(data){
                    console.log(data);
                },
                error: function(data){
                    console.log(data);
                }
            });
        });
    </script>
    <script>
        $('#soportes_tickets_datatable').DataTable({
            processing: true,
            serverSide: true,
            ordering: false,
            searching: false,
            responsive: true,
            scrollX: true,
            ajax: {
                url: "/soportes_tickets/datatable_json",
                type: "POST",
                headers: { "X-CSRF-TOKEN": "{{ csrf_token() }}" },
                dataType: "json",
                dataSrc: "data",
                data: { "estatus": "A" }
            },
            columns: [
                { data: "id" },
                { data: "descripcion" },
                { data: "categoria" },
                { data: "estado" },
                { data: "soluciones" }
            ],
            columnDefs: [
                {
                    targets: 0, // ID
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    },
                    sort: 8
                },
                {
                    targets: 2, // Categoría
                    data: null,
                    render: function(data, type, row, meta) {
                        if(data.nombre.length > 32)
                            texto = '<span title="' + data.nombre + '">' + data.nombre.substr(0, 32) + '…' + '</span>';
                        else
                            texto = data.nombre;
                        if(data.url == '')
                            return texto;
                        else
                            return '<a href="' + data.url + '">' + texto + '</a>';
                    }
                },
                {
                    targets: 3, // Estado
                    data: null,
                    render: function(data, type, row, meta) {
                        let color = "black";
                        switch (data)    {
                            case "SIN ATENDER": color = "#7d6608"; break;
                            case "TRABAJANDO":  color = "#154360"; break;
                            case "CANCELADO":   color = "#e53935"; break;
                            case "PENDIENTE":   color = "#4a235a"; break;
                            case "TERMINADO":   color = "#0b5345"; break;
                            case "CERRADO":     color = "#546e7a"; break;
                        }
                        return '<strong style="color:' + color + '; ">' + data + '</strong>';
                    }
                },
                {
                    targets: [1, 4],
                    data: null,
                    render: function(data, type, row, meta) {
                        if (data != null)
                            if(data.length > 32)
                                return '<span title="' + data + '">' + data.substr(0, 32) + '…' + '</span>';
                            else
                                return data;
                        return '—';
                    }
                },
            ],
            createdRow: function( row, data, dataIndex ){
                switch (data.estado)    {
                    case "SIN ATENDER": $(row).css("background-color", "#fef9e7");  break;
                    case "TRABAJANDO":  $(row).css("background-color", "#ebf5fb");  break;
                    case "CANCELADO":   $(row).css("background-color", "#fdedec");  break;
                    case "PENDIENTE":   $(row).css("background-color", "#f5eef8");  break;
                    case "TERMINADO":   $(row).css("background-color", "#eafaf1");  break;
                    case "CERRADO":     $(row).css("background-color", "#eceff1");  break;
                }
            },
            language: {
                lengthMenu: "Mostrar _MENU_",
                search: "Filtrar:",
                zeroRecords: "No se encontraron registros",
                info: "Total de registros _TOTAL_ ",
                infoEmpty: "No hay registros",
                infoFiltered: "(_TOTAL_ filtrados de _MAX_ registros)",
                oPaginate: {
                    sFirst: "Primero",
                    sLast: "Último",
                    sNext: "Siguiente",
                    sPrevious: "Anterior"
                }
            }
        });
    </script>
{% endblock %}
